{"version":3,"sources":["components/Card.js","components/Fetching.js","context/authContext.js","components/CardContainer.js","components/Navbar.js","components/PokemonDetails.js","pages/LoginPage.js","pages/RegisterPage.js","pages/AuthPage.js","App.js","serviceWorker.js","index.js","static/working_pikachu.gif","static/sad_pikachu.webp"],"names":["StyledLink","styled","Link","_templateObject","StyledButton","Button","_templateObject2","CenterVertical","div","_templateObject3","PokemonCard","props","pokemonName","name","charAt","toUpperCase","slice","pokemonDetailsUrl","concat","id","react_default","a","createElement","Card_default","style","width","margin","color","backgroundColor","Img","variant","src","image","Body","Title","to","textDecoration","StyledGif","img","Fetching_templateObject","StyledDiv","Fetching_templateObject2","Fetching","gifLocation","success","require","alt","AuthContext","React","createContext","auth","user","error","logIn","password","register","logOut","AuthProvider","api","_useState","useState","_useState2","Object","slicedToArray","isAuth","setIsAuth","_useState3","_useState4","setUser","_useState5","_useState6","setError","useEffect","lAuth","localStorage","getItem","lUser","_ref","asyncToGenerator","regenerator_default","mark","_callee","request","data","wrap","_context","prev","next","axios","post","sent","status","Error","t0","stop","_x","_x2","apply","this","arguments","_ref2","_callee2","_context2","_x3","_x4","_ref3","_callee3","_context3","get","Provider","value","height","children","CardContainer","pokemonCards","setPokemonCards","isLoading","setIsLoading","failedToFetch","setFailedToFetch","context","useContext","fetchData","result","map","elem","src_components_Card","key","components_Fetching","Container_default","Row_default","Redirect","Navbar_templateObject","StyledNavbar","Navbar","Navbar_templateObject2","PokemonNavbar","logout","abrupt","bg","expand","NavbarBrand_default","Navbar_StyledLink","Dropdown_default","drop","Toggle","index_es","icon","faUser","Menu","Item","onClick","StyledTable","Table","PokemonDetails_templateObject","StyledHead","thead","PokemonDetails_templateObject2","PokemonDetails_templateObject3","_templateObject4","PokemonDetails","statsTable","typeTable","pokemonId","match","params","pokemon","setPokemon","req","moves","stats","types","poke","move","replace","stat","base","base_stat","type","experience","base_experience","weight","sprites","front_default","Badge_default","PokemonDetails_StyledDiv","striped","bordered","hover","Button_default","size","block","PokemonDetails_StyledLink","Image_default","minWidth","LoginPage_templateObject","FormDiv","LoginPage_templateObject2","StyledTitle","h3","LoginPage_templateObject3","LoginPage_templateObject4","StyledButtonContainer","_templateObject5","StyledForm","Form","_templateObject6","_templateObject7","LoginPage","username","setUsername","setPassword","handleSubmit","event","preventDefault","length","LoginPage_StyledDiv","Alert_default","message","onSubmit","Form_default","Group","controlId","Control","placeholder","onChange","target","LoginPage_StyledButton","LoginPage_StyledLink","RegisterPage_templateObject","RegisterPage_templateObject2","RegisterPage_templateObject3","RegisterPage_templateObject4","RegisterPage_templateObject5","RegisterPage_templateObject6","RegisterPage_templateObject7","RegisterPage","passwordConfirm","setPasswordConfirm","_useState7","_useState8","RegisterPage_StyledDiv","RegisterPage_FormDiv","RegisterPage_StyledTitle","RegisterPage_StyledForm","RegisterPage_StyledButtonContainer","RegisterPage_StyledButton","RegisterPage_StyledLink","AuthPage_templateObject","AuthPage","AuthPage_StyledDiv","Switch","Route","path","component","App","authContext_AuthProvider","className","components_Navbar","exact","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.b7074f23.chunk.js","sourcesContent":["import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './Card.css';\n\n\nconst StyledLink = styled(Link)`\n  text-decoration: 'none';\n  color: #ffffff;\n`\nconst StyledButton = styled(Button)`\n  background-color: #007bff;\n  &:hover {\n    background-color: #ffffff;\n    ${StyledLink} {\n      text-decoration: 'none';\n      color: #007bff;\n    }\n  }\n`\n\nconst CenterVertical = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PokemonCard = (props) =>  {\n  \n  const pokemonName = props.name.charAt(0).toUpperCase() + props.name.slice(1);\n  const pokemonDetailsUrl = `/pokemons/${props.id}`\n  return (\n    <Card style={{width: '18rem', margin: '1rem', color: '#ffffff', backgroundColor: '#1a1a1a'}}>\n      <Card.Img variant=\"top\" src={props.image}/>\n      <Card.Body>\n        <CenterVertical>\n          <Card.Title>{pokemonName}</Card.Title>\n          <StyledButton variant=\"primary\">\n            <StyledLink to={pokemonDetailsUrl} style={{textDecoration: 'none'}}>\n              Details\n            </StyledLink>\n          </StyledButton>\n        </CenterVertical>\n      </Card.Body>\n    </Card>\n  )\n}\n\n\nexport default PokemonCard","import React from 'react'\nimport styled from 'styled-components';\n\n\nconst StyledGif = styled.img`\n  object-fit: contain;\n  height: 91.5vh;\n  width: 100%;\n`\nconst StyledDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\n\nconst Fetching = (props) => {\n  const gifLocation = props.success ? require('../static/working_pikachu.gif') : require('../static/sad_pikachu.webp');\n  return (\n    <StyledDiv>\n      <StyledGif src={gifLocation} alt=\"Loading...\"></StyledGif>      \n    </StyledDiv>\n  )\n}\n\nexport default Fetching\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nexport const AuthContext = React.createContext({\n  auth: false, \n  user: null,\n  error: null,\n  logIn: (name, password) => {},\n  register: (name, password) => {},\n  logOut : () => {}\n});\n\nexport const AuthProvider = (props) => {\n  const api = 'https://pokedex-232720.appspot.com';\n  const [isAuth, setIsAuth] = useState(false);\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const lAuth = localStorage.getItem('auth')\n    const lUser = localStorage.getItem('user')\n    setIsAuth(lAuth)\n    setUser(lUser)\n  }, [])\n\n  const logIn = async (name, password) => {\n    try {\n      const request = await axios.post(api + '/login', {name,password})\n      \n      if (request.status !== 200) {\n        throw new Error(request.data.error)\n      }\n      const data = await request.data;\n      setUser(data.user);\n      setIsAuth(data.auth);\n    } catch (e) {\n      setError(e);\n      setIsAuth(false)\n    }\n  }\n\n  const register= async (name, password) => {\n    try {\n      const request = await axios.post(api + '/register', {name,password})\n      if (request.status !== 200) {\n        throw new Error(request.data.error)\n      }\n      const data = await request.data;\n      setUser(data.user);\n      setIsAuth(data.auth);\n    } catch (e) {\n      setError(e)\n      setIsAuth(false)\n    }\n  }\n\n  const logOut = async () => {\n    const request = await axios.get(api + '/logout');\n    const data = await request.data;\n    setUser(data.user);\n    setIsAuth(data.auth);\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        auth: isAuth,\n        user: user,\n        error: error,\n        logIn: logIn,\n        register: register,\n        logOut: logOut\n      }}\n      style={{height: '100%'}}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  )\n}\n\n","import React, {useState, useEffect, useContext} from 'react'\nimport PokemonCard from './Card';\nimport Fetching from './Fetching';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport axios from 'axios';\nimport {AuthContext} from '../context/authContext'\nimport {Redirect} from 'react-router'\n\nconst CardContainer = () => {\n  const api = 'https://pokedex-232720.appspot.com/pokemons';\n\n  const [pokemonCards, setPokemonCards] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [failedToFetch, setFailedToFetch] = useState(false);\n  const context = useContext(AuthContext)\n\n  const fetchData = async () => {\n    try {\n      let result = await axios(api);\n      setPokemonCards(result.data.map(elem => <PokemonCard key={elem.id} id={elem.id} name={elem.name} image={'http://' + elem.image} />));\n      setIsLoading(false);\n    } catch (error) {\n      setFailedToFetch(true);    \n    }\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n  \n  if (!context.auth) {\n    return <Redirect to=\"/auth\"/>\n  }\n\n  if (failedToFetch) {\n    return <Fetching success={false} />\n  }\n\n  if (isLoading) {\n    return <Fetching success={true} />\n  }\n  return (\n    <Container>\n      <Row>\n        {pokemonCards}\n      </Row>\n    </Container>\n  )\n}\n\nexport default CardContainer;\n","import React, {useContext} from 'react'\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavbarBrand from 'react-bootstrap/NavbarBrand';\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\nimport { AuthContext } from '../context/authContext';\n\nconst StyledLink = styled(Link)`\n  text-decoration: 'none';\n  color: #ffffff;\n  transition: 0.1s;\n  &:hover {\n    text-decoration: 'none';\n    color: #007bff;\n  }\n`\n\nconst StyledNavbar = styled(Navbar)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst PokemonNavbar = () => {\n\n  const context = useContext(AuthContext)\n\n  const logout = async () => await context.logOut() \n\n  const dropDown = () => {\n    return context.auth ? (\n      <Dropdown drop={'left'}>\n        <Dropdown.Toggle>\n          <FontAwesomeIcon icon={faUser}/>\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <Dropdown.Item onClick={logout}>Log Out</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    ) : (<span></span>)\n  }\n\n  return (\n    <StyledNavbar bg=\"dark\" expand=\"lg\">\n      <NavbarBrand >\n        <StyledLink to=\"/\" style={{textDecoration: 'none'}}>Pokedex</StyledLink>\n      </NavbarBrand>\n      {dropDown()}\n    </StyledNavbar>    \n  )\n}\n\nexport default PokemonNavbar\n","import React, {useContext, useState, useEffect} from 'react'\nimport {Redirect} from 'react-router'\nimport { Link } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table'\nimport Image from 'react-bootstrap/Image'\nimport Badge from 'react-bootstrap/Badge'\nimport Button from 'react-bootstrap/Button'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport { AuthContext } from '../context/authContext';\nimport Fetching from './Fetching'\n\nconst StyledTable = styled(Table)`\n  width: 40%;\n  margin-top: 2%;\n  @media screen and (max-width: 630px) {\n    width: 90%;\n  }\n`\n\nconst StyledHead = styled.thead`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n`\n\nconst StyledDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\n\nconst StyledLink = styled(Link)`\n  text-decoration: 'none';\n  color: #ffffff;\n  transition: 0.1s;\n  &:hover {\n    text-decoration: 'none';\n    color: #000000;\n  }\n`\n\n\n\nconst PokemonDetails = (props) => {\n  const pokemonId = props.match.params.id;\n  const api = `https://pokeapi.co/api/v2/pokemon/${pokemonId}`\n  const [pokemon, setPokemon] = useState(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const context = useContext(AuthContext)\n  let statsTable;\n  let typeTable;\n  const fetchData = async () => {\n    const req = await axios.get(api)\n    const data = await req.data\n    \n    const moves = data['moves']\n      .map(elem => elem.move.name.replace('-', ' '))\n    const stats = data['stats']\n      .map(elem => ({name: elem.stat.name, base: elem.base_stat}))\n    const types = data['types']\n      .map(elem => elem.type.name)\n\n    const poke = {\n      experience: data.base_experience,\n      moves: moves,\n      name: data.name,\n      stats: stats,\n      types: types,\n      weight: data.weight,\n      image: data.sprites.front_default\n    }\n\n    setPokemon(poke)\n    setIsLoading(false)\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n\n  if (!context.auth) {\n    return <Redirect to=\"/auth\" />\n  }\n\n  if (isLoading) {\n    return <Fetching success={true}/>\n  } else {\n    statsTable = pokemon.stats.map(stat => {\n      return (\n        <tr>\n          <td>{stat.name}</td>\n          <td>{stat.base}</td>\n        </tr>\n      )\n    })\n    typeTable = pokemon.types.map(type => {\n      switch (type) {\n        case 'fire':\n          return <Badge variant=\"danger\" style={{margin: '2%'}}>{type}</Badge>\n        case 'grass':\n        case 'bug':\n          return <Badge variant=\"success\" style={{margin: '2%'}}>{type}</Badge>\n        case 'water':\n        case 'ice':\n          return <Badge variant=\"primary\" style={{margin: '2%'}}>{type}</Badge>\n        case 'electric':\n          return <Badge variant=\"warning\" style={{margin: '2%'}}>{type}</Badge>\n        default:\n          return <Badge variant=\"light\" style={{margin: '2%'}}>{type}</Badge>\n      }\n    })\n  }\n\n\n  return (\n    <StyledDiv>\n      <StyledTable striped bordered hover variant=\"dark\">\n        <StyledHead>\n          <Button variant=\"outline-light\" size=\"lg\" block style={{margin: '1%'}}>\n            <StyledLink to=\"/\" style={{textDecoration: 'none'}}>\n              Back to All Pokemons\n            </StyledLink>\n          </Button>\n          <Image src={pokemon.image} alt=\"Here is the image of pokemon\" style={{minWidth: '100%'}} />\n        </StyledHead>\n        <tbody>\n          <tr>\n            <td>Name</td>\n            <td>{pokemon.name}</td>\n          </tr>\n          <tr>\n            <td>Types</td>\n            <td>{typeTable}</td>\n          </tr>\n          <tr>\n            <td>Initial Experience</td>\n            <td>{pokemon.experience}</td>\n          </tr>\n          <tr>\n            <td>Weight</td>\n            <td>{pokemon.weight}</td>\n          </tr>\n        </tbody>\n        {statsTable}\n      </StyledTable>\n    </StyledDiv>\n  )\n}\n\nexport default PokemonDetails","import React, {useState, useContext, useEffect} from 'react'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport {Link} from 'react-router-dom'\nimport {Redirect} from 'react-router'\nimport styled from 'styled-components'\nimport { AuthContext } from '../context/authContext';\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`\n\nconst FormDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  margin: 10%;\n  background-color: #ffffff;\n  align-items: center;\n  border-radius: 5%;\n  padding-top: 5%;\n  @media screen and (max-width: 630px) {\n    width: 90%;\n  }\n`\nconst StyledTitle = styled.h3`\n  color: #007bff;\n  padding-top: 5%;\n  @media screen and (max-width: 630px) {\n    font-size: 14px;\n  }\n`\nconst StyledLink = styled(Link)`\n  text-decoration: 'none';\n  color: #ffffff;\n  height: 100vh;\n  &:hover {\n    color: #ffffff;\n  }\n`\n\nconst StyledButtonContainer = styled.div`\n  display: flex;\n  align-items: stretch;\n  justify-content: space-between;\n`\n\nconst StyledForm = styled(Form)`\n  padding: 10%;\n`\n\nconst StyledButton = styled(Button)`\n  transition: all 0.2s ease-out;\n  &:hover {\n    transform: scale(1.15);\n  }\n  @media screen and (max-width: 630px) {\n    font-size: 12px;\n  }\n`\n\nconst LoginPage = () => {\n  \n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState(null)\n  const context = useContext(AuthContext)\n\n  useEffect(() => {\n    setError(null)\n    setUsername('')\n    setPassword('')\n  }, [])\n\n  const handleChangeUsername = (event) => setUsername(event.target.value) \n  const handleChangePassword = (event) => setPassword(event.target.value)\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    if (username.length === 0 || password.length === 0) {\n      setError(new Error('One or more fields are empty'))\n    }\n    await context.logIn(username, password)\n    setError(context.error)\n  }\n\n  if (context.auth) {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <StyledDiv>\n      <FormDiv>\n        <StyledTitle>Welcome back, trainer!</StyledTitle>\n        {\n          error ? <Alert variant=\"danger\">{context.error.message}</Alert> : <span></span>\n        }\n        <StyledForm onSubmit={handleSubmit}>\n          <Form.Group controlId=\"username\">\n            <Form.Control type=\"text\" placeholder=\"Username\" onChange={handleChangeUsername} />\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleChangePassword}/>\n          </Form.Group>\n          <StyledButtonContainer>\n            <StyledButton variant=\"primary\" type=\"submit\">Login</StyledButton>\n            <StyledButton variant=\"success\" >\n              <StyledLink style={{textDecoration: 'none'}} to=\"/auth/register\">\n                Not a member?\n              </StyledLink>\n            </StyledButton>\n          </StyledButtonContainer>\n        </StyledForm>\n      </FormDiv>\n    </StyledDiv>\n  )\n}\n\nexport default LoginPage\n","import React, {useState, useContext, useEffect} from 'react'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport {Link} from 'react-router-dom'\nimport {Redirect} from 'react-router'\nimport styled from 'styled-components'\nimport { AuthContext } from '../context/authContext';\n\nconst FormDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  margin: 10%;\n  background-color: #ffffff;\n  align-items: center;\n  border-radius: 5%;\n  @media screen and (max-width: 630px) {\n    width: 90%;\n  }\n`\n\nconst StyledTitle = styled.h3`\n  color: #007bff;\n  padding-top: 5%;\n  @media screen and (max-width: 630px) {\n    font-size: 14px;\n  }\n`\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`\nconst StyledLink = styled(Link)`\n  text-decoration: 'none';\n  color: #ffffff;\n  height: 100vh;\n  &:hover {\n    color: #ffffff;\n  }\n`\n\nconst StyledButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst StyledForm = styled(Form)`\n  padding: 10%;\n`\n\nconst StyledButton = styled(Button)`\n  transition: all 0.2s ease-out;\n  &:hover {\n    transform: scale(1.15);\n  }\n  @media screen and (max-width: 630px) {\n    font-size: 12px;\n  }\n`\n\nconst RegisterPage = () => {\n  \n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirm, setPasswordConfirm] = useState('')\n  const [error, setError] = useState(null)\n  const context = useContext(AuthContext)\n\n  useEffect(() => {\n    setError(null)\n    setUsername('')\n    setPassword('')\n  }, [])\n\n  const handleChangeUsername = (event) => setUsername(event.target.value) \n  const handleChangePassword = (event) => setPassword(event.target.value) \n  const handleChangePasswordConfirm = (event) => setPasswordConfirm(event.target.value) \n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    if (password !== passwordConfirm) {\n      setError(new Error('Passwords do not match.'))\n      return\n    }\n\n    if(password.length === 0 || passwordConfirm.length === 0 || username.length === 0) {\n      setError(new Error('Fields cannot be left empty.'))\n      return\n    }\n    await context.register(username, password)\n    setError(context.error)\n  }\n\n\n  if (context.auth) {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <StyledDiv>\n      <FormDiv>\n        <StyledTitle>Welcome back, trainer!</StyledTitle>\n        {\n          error ? <Alert variant=\"danger\">{error.message}</Alert> : <span></span>\n        }\n        <StyledForm onSubmit={handleSubmit}>\n          <Form.Group controlId=\"username\">\n            <Form.Control type=\"text\" placeholder=\"Username\" onChange={handleChangeUsername} />\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleChangePassword}/>\n          </Form.Group>\n          <Form.Group controlId=\"password-confirm\">\n            <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleChangePasswordConfirm}/>\n          </Form.Group>\n          <StyledButtonContainer>\n            <StyledButton variant=\"primary\" type=\"submit\">Register</StyledButton>\n            <StyledButton variant=\"success\" >\n              <StyledLink style={{textDecoration: 'none'}} to=\"/auth\">\n                Already a member?\n              </StyledLink>\n            </StyledButton>\n          </StyledButtonContainer>\n        </StyledForm>\n      </FormDiv>\n    </StyledDiv>\n  )\n}\n\nexport default RegisterPage\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport LoginPage from './LoginPage'\nimport RegisterPage from './RegisterPage'\nimport styled from 'styled-components'\n\nconst StyledDiv = styled.div`\n  width: 100%;\n\n`\n\nexport const AuthPage = (props) => {\n\n  return (\n    <StyledDiv>\n      <Switch>\n          <Route path='/auth/register' component={RegisterPage}/>\n          <Route path='/auth' component={LoginPage}/>\n      </Switch> \n    </StyledDiv>\n  )\n}\n\n","import React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom'\n\nimport CardContainer from './components/CardContainer';\nimport PokemonNavbar from './components/Navbar';\nimport PokemonDetails from './components/PokemonDetails';\n\nimport {AuthProvider} from './context/authContext';\nimport {AuthPage} from './pages/AuthPage'\nconst App = (props) =>  {\n  return (\n    <AuthProvider>\n      <div className=\"app__container\">\n        <PokemonNavbar/>\n        <Switch>\n          <Route exact path='/' component={CardContainer}/>\n          <Route path='/auth' component={AuthPage}/>\n          <Route path='/pokemons/:id' component={PokemonDetails}/>\n        </Switch>       \n      </div>\n    </AuthProvider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/working_pikachu.674fe440.gif\";","module.exports = __webpack_public_path__ + \"static/media/sad_pikachu.e8ddb9b8.webp\";"],"sourceRoot":""}